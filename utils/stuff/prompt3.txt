У меня есть результат распознавания речи для некоторой записи, на которой проговорено описание некоторой задачи, решаемая алгоритмически с помощью кода. Твоя задача - на основе распознанного текста понять, что это за задача.

Распознанный текст может быть не точным и содержать пропуски, ошибки и так далее... всё то, что характерно для автоматически распознанного текста.

Распозннаный текст:
```

```

################

У меня есть описание некоторой задачи. Твоя задача - тщательно подумать шаг за шагом и написать алгоритм для решения данной задачи. Напиши алгоритм на естественном языке, понятно объяснив.

Задача:
```

```

################
Тебе будут даны описание задачи и алгоритм решения данной задачи. Твоя цель - опираясь на алгоритм, написать код на Python для решения поставленной задачи.

ВАЖНО! При необходимости, используй только СТАНДАРТНЫЕ БИБЛИОТЕКИ.

ВАЖНО! Код должен принимать входные данные через STDIN и возвращать результат работы через STDOUT. Примерно так, как это реализовано в коде на первой задаче. Если входные данные имеют неверный формат, тип или размер, или при вычислениях возникает неразрешимая ситуация, программа должна корректно завершиться и вывести ошибку в формате, описанном в задаче.

ВАЖНО! Данные должны вводиться и выводиться в том порядке, в котором они перечисляются в задании. Их формат обычно следующий:
- Разные виды данных должны разделяться переносом строки;
- Массив вводится и выводится через пробел;
- Матрица вводится и выводится построчно. Значения внутри строк разделяются пробелами, строки — знаком переноса строки;
- Ввод и вывод должны финально оканчиваться переносом строки.

ВАЖНО! В общем случае код будет проверяться на следующих типах входных данных, когда это допустимо:
а. На допустимых (по значению и формату) входных данных, находящихся внутри класса эквивалентности допустимых значений;
б. На допустимых (по значению и формату) входных данных, находящихся на экстремумах и границах класса эквивалентности допустимых значений;
в. На недопустимых входных данных (по значению);
г. На недопустимых входных данных (по типу и формату).

Задача:
```

```

Алгоритм решения:
```

```





В пещере тёмной, где пылится веками 
Книга заклятий с таинственными словами
Старец колдует, шепча имена
Он ищет заклятья для главного дня
У мага есть список заклятий на столе
В них слоги и сила в каждой строке
Он хочет их так распределить между свитков
Чтобы сила значений достигла предельных
Есть у него от одного до трёх свитков
Где каждый вместилище для слогов
Они не бездонны, лимит у них есть
И больше положенных слогов в них не вплесть 
Заклятья содержат два числа: длина и сила -
Сколько в нём слогов и насколько сильна
Затем идут сами заклятий строки
А в конце число свитков и их лимиты
Сначала ты вводишь число n - одно
Сколько заклятий пришло за одно
Затем n строк, где заданы длина и сила
Что маг применит
Чтобы победа была
Потом введи сколько свитков будет всего
Числом на строке предпоследней одно
А следом их лимиты всё строчку через пробел подряд
Сколько слогов каждый из свитков хранить будет рад
Все числа должны быть положительные строго
А чар всего не более 100 по закону чертога
И помни свитков от 1 до 3 может быть
Лишь столько позволит задача вместить
Но если вдруг код не верен или любой сбой
Любая ошибка - расплата грозой
В ответ на изъян без прериканий
Выведите -1 - не трать заклинаний
Иначе ответ - это максимум силы в бою
Что маг из чар соберёт
Призывая свитки к строю
Одно лишь наибольшее число ты на выход даёшь
И в этом вся мудрость, что ты сбережёшь
Подумай как чары в свитке вложить без потерь
Чтоб старец сразил бы саму круговерть
Несколько Свитков и много чар - непростая игра
Но ты подберёшь их и будешь жара

####################

Тебе будет дано стихотворение, описывающее некоторую алгоритмическую задачу. Твоя задача - понять эту задачу, понять, какие данные даются на вход и что требуется вывести в ответ. Распиши подробно своё понимание данной задачи.

Стихотворение:
```
В пещере тёмной, где пылится веками 
Книга заклятий с таинственными словами
Старец колдует, шепча имена
Он ищет заклятья для главного дня
У мага есть список заклятий на столе
В них слоги и сила в каждой строке
Он хочет их так распределить между свитков
Чтобы сила значений достигла предельных
Есть у него от одного до трёх свитков
Где каждый вместилище для слогов
Они не бездонны, лимит у них есть
И больше положенных слогов в них не вплесть 
Заклятья содержат два числа: длина и сила -
Сколько в нём слогов и насколько сильна
Затем идут сами заклятий строки
А в конце число свитков и их лимиты
Сначала ты вводишь число n - одно
Сколько заклятий пришло за одно
Затем n строк, где заданы длина и сила
Что маг применит
Чтобы победа была
Потом введи сколько свитков будет всего
Числом на строке предпоследней одно
А следом их лимиты всё строчку через пробел подряд
Сколько слогов каждый из свитков хранить будет рад
Все числа должны быть положительные строго
А чар всего не более 100 по закону чертога
И помни свитков от 1 до 3 может быть
Лишь столько позволит задача вместить
Но если вдруг код не верен или любой сбой
Любая ошибка - расплата грозой
В ответ на изъян без прериканий
Выведите -1 - не трать заклинаний
Иначе ответ - это максимум силы в бою
Что маг из чар соберёт
Призывая свитки к строю
Одно лишь наибольшее число ты на выход даёшь
И в этом вся мудрость, что ты сбережёшь
Подумай как чары в свитке вложить без потерь
Чтоб старец сразил бы саму круговерть
Несколько Свитков и много чар - непростая игра
Но ты подберёшь их и будешь жара
```



